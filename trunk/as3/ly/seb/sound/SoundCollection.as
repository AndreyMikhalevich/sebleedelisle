package ly.seb.sound {import ly.seb.sound.*;	/**	 * @author Seb */public class SoundCollection implements ISoundPlayable{			public var sounds:Array; // Array of SuperSounds!	public var counter:Number = 0; 	public var soundCount:Number;	public var setupFailed : Boolean;	public var name : String; 			public function SoundCollection(name:String, soundrefs:Array, vol:Number=1)	{		counter = 0;		sounds = new Array(); 				var s:SuperSound;		for(var i:Number = 0; i< soundrefs.length;i++)		{						s = SoundPlayer.addSound(name+i.toString(), soundrefs[i], vol); 						if(s) {				sounds.push(s); 				//trace("ADDING FOOTSTEP "+s.name+" "+s); 				//s.playSound(); 			}								}				soundCount = sounds.length; 		if(soundCount==0) setupFailed = true; 				this.name = name; 				//if(!setupFailed) SoundPlayer.addSoundCollection(this); 					} 		public function playSound(vol:Number=1, pan:Number=0, offset:uint = 0) : void	{		counter++;		if (counter>=soundCount) counter = 0;		var s : SuperSound = sounds[counter];		//trace("playing FOOTSTEP =" +s.name);			SoundPlayer.playSound(s.name, vol, pan); 			}		public function playRandomSound(vol:Number=1, pan:Number=0, offset:uint = 0) : void	{		var rand : int = Math.random() * sounds.length ;		var s : SuperSound = sounds[rand];		SoundPlayer.playSound(s.name, vol, pan);	}		/*	public function mute(){		//trace("muting");		for(var i:Number = 0;i<sounds;i++) sounds[i].mute();			}	public function unMute(){		for(var i:Number = 0;i<sounds;i++) sounds[i].unmute();			}	*/		}}