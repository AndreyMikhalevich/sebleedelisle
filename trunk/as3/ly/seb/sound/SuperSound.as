package ly.seb.sound {	import flash.media.*;	import flash.net.*;		/** * @author Seb */public class SuperSound implements ISoundPlayable {	//public var clip:MovieClip;	//public var sound:Sound;	public var name:String;	private var _volume:Number;	public var pan:Number;	public var setupFailed:Boolean = false;	public var sound : Sound; 	public var soundChannel : SoundChannel = null; 	public var maxVolume : Number = 1; 	//private var volumeMultiplier : Number;	private var muted : Boolean;	//public var looping : Boolean; 		//public var delay:Number;		public function SuperSound(sname:String, soundref:*, maxvolume:Number = 1, defaultpan:Number = 0)	{ 			if(soundref is String)		{			try 			{						sound = new Sound(new URLRequest(SoundPlayer.defaultPath+soundref)); 			} 			finally 			{				trace("WARNING - SuperSound sound not found : "+sname); 						return; 							}				}				else if(soundref is Class)			sound = new soundref(); 		else if(soundref is Sound)			sound = soundref; 				if(!sound) 		{			trace("WARNING - SuperSound sound not found : "+sname); 					return; 		}				maxVolume = maxvolume; 		_volume = maxVolume; 		pan = defaultpan; 		trace("new SuperSound", sound, soundref, soundref is Sound, typeof soundref);			name = sname; 							}	public function playSound(vol:Number=Number.NaN,  pan:Number=Number.NaN, offset:uint = 0):void	{		//trace("playing sound", sound);		soundChannel = sound.play (offset);				if(!isNaN(vol)) _volume = vol;		if(!isNaN(pan)) this.pan = pan;				soundChannel.soundTransform = new SoundTransform(_volume*maxVolume, this.pan); 			}	public function loopSound(count:int, vol:Number = Number.NaN, pan:Number = Number.NaN, offset : Number = 0 ):void	{						soundChannel = sound.play(offset,count);				if(!isNaN(vol)) _volume = vol;		if(!isNaN(pan)) this.pan = pan; 				soundChannel.soundTransform = new SoundTransform(_volume*maxVolume, this.pan);						} 	public function stopSound():void	{		if( soundChannel !== null )		{			soundChannel.stop() ;		}		}		public function set volume ( val : Number ) : void	{		if ( soundChannel !== null )		{			soundChannel.soundTransform = new SoundTransform( val*maxVolume, pan ) ;			_volume = val ;		}			}		public function get volume () : Number	{		return _volume ;	}	public function get length() : Number	{		return sound.length; 			}	public function get position() : Number 	{		if(soundChannel) 			return soundChannel.position; 		else return 0; 	}	}}